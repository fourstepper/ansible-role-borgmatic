---
- name: Make sure base packages for borg and borgmatic are installed
  package:
    name: "{{ borgmatic_base_packages[ansible_facts['os_family']] }}"
    state: present

- name: Download the systemd files
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "/etc/systemd/system/{{ item | basename }}"
    mode: '0440'
  notify:
    - enable the borgmatic systemd timer
  with_items:
    - https://projects.torsion.org/borgmatic-collective/borgmatic/raw/branch/main/sample/systemd/borgmatic.service
    - https://projects.torsion.org/borgmatic-collective/borgmatic/raw/branch/main/sample/systemd/borgmatic.timer

- name: Pipx ensure path
  command:
    cmd: pipx ensurepath
  changed_when: false

- name: Make sure pkg-config is installed
  package:
    name: pkg-config

- name: Make sure borgmatic and borgbackup are installed
  community.general.pipx:
    name: "{{ item }}"
    state: present
  with_items:
    - borgmatic
    - borgbackup

- name: Make sure the borgmatic configs directory structure is set up
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/borgmatic/"
    - "/etc/borgmatic.d/"

- name: Template all YAML configuration files from files/borgmatic
  template:
    src: "{{ item }}"
    dest: "/etc/borgmatic.d/{{ item | basename }}"
    mode: "0400"
  with_fileglob: "{{ playbook_dir }}/files/borgmatic/*.y*ml"
  register: config

- name: Initialize borgmatic
  command:
    cmd: "borgmatic init --encryption {{ borgmatic_encryption_mode }}"
  register: init
  when: config.changed
  failed_when:
    - "'Failed to create/acquire the lock' not in init.stderr"
    - init.rc != 0
